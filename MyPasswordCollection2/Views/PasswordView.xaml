<UserControl
    x:Class="MPC.Views.PasswordView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:convs="clr-namespace:MPC.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=system.windows.interactivity"
    xmlns:local="clr-namespace:MPC.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="pv"
    d:DesignHeight="150"
    d:DesignWidth="400"
    mc:Ignorable="d">

    <Border Padding="10">

        <Border.Resources>
            <convs:InverseBooleanConverter x:Key="InverseBoolConv" />
            <convs:NullToBoolConverter x:Key="NullToBoolConv" />
            <BooleanToVisibilityConverter x:Key="BoolToVisible" />
            <convs:MultiConverter x:Key="InversedBoolToVisConv">
                <convs:BoolToHidden />
            </convs:MultiConverter>



            <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox">
                <Setter Property="IsReadOnly" Value="{Binding Path=DataContext.EditMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}, TargetNullValue=true, Converter={StaticResource ResourceKey=InverseBoolConv}}" />
            </Style>

            <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="local:PasswordTextBox" />
        </Border.Resources>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="auto"
                    MinWidth="25"
                    MaxWidth="200"
                    SharedSizeGroup="LeftColumn" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition
                    Width="auto"
                    MinWidth="25"
                    MaxWidth="200"
                    SharedSizeGroup="RightColumn" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Text="{DynamicResource text.site}" />
            <TextBlock Grid.Row="1" Text="{DynamicResource text.login}" />
            <TextBlock Grid.Row="2" Text="{DynamicResource text.password}" />

            <TextBox
                x:Name="tbSite"
                Grid.Row="0"
                Grid.Column="1"
                Text="{Binding Path=DataContext.SelectedItem.Site, UpdateSourceTrigger=Explicit}" />
            <TextBox
                x:Name="tbLogin"
                Grid.Row="1"
                Grid.Column="1"
                Text="{Binding Path=DataContext.SelectedItem.Login, UpdateSourceTrigger=Explicit}" />
            <local:PasswordTextBox
                x:Name="ptbPassword"
                Grid.Row="2"
                Grid.Column="1"
                Password="{Binding Path=DataContext.SelectedItem.Password, UpdateSourceTrigger=Explicit}"
                UsePasswordChar="{Binding ElementName=ChbShowPassword, Path=IsChecked, Converter={StaticResource InverseBoolConv}}" />

            <Button
                Grid.Row="0"
                Grid.Column="2"
                Content="{DynamicResource button.copy}">
                <i:Interaction.Behaviors>
                    <local:CopyToClipboardBehavior Text="{Binding ElementName=tbSite, Path=Text}" />
                </i:Interaction.Behaviors>
            </Button>
            <Button
                Grid.Row="1"
                Grid.Column="2"
                Content="{DynamicResource button.copy}">
                <i:Interaction.Behaviors>
                    <local:CopyToClipboardBehavior Text="{Binding ElementName=tbLogin, Path=Text}" />
                </i:Interaction.Behaviors>
            </Button>
            <Button
                Grid.Row="2"
                Grid.Column="2"
                Content="{DynamicResource button.copy}">
                <i:Interaction.Behaviors>
                    <local:CopyToClipboardBehavior Text="{Binding ElementName=ptbPassword, Path=Password}" />
                </i:Interaction.Behaviors>
            </Button>

            <CheckBox
                x:Name="ChbShowPassword"
                Grid.Row="3"
                Grid.Column="1"
                Margin="10,0"
                Padding="5,3"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"
                Content="{DynamicResource checkbox.showPassword}"
                DockPanel.Dock="Left" />




            <Button
                Grid.Row="4"
                Grid.Column="2"
                Content="{DynamicResource button.edit}"
                Visibility="{Binding Path=DataContext.EditMode, Converter={StaticResource InversedBoolToVisConv}}">
                <i:Interaction.Behaviors>
                    <local:CanExecuteToIsEnabledBehavior Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.EditCommand}" />
                </i:Interaction.Behaviors>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding Path=DataContext.EditCommand}" />
                        <local:SetFocusAction FocusElement="{Binding ElementName=tbSite}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>

            <UniformGrid
                Grid.Row="4"
                Grid.ColumnSpan="2"
                HorizontalAlignment="Right"
                Columns="2"
                Visibility="{Binding Path=DataContext.EditMode, Converter={StaticResource BoolToVisible}}">
                <Button
                    Command="{Binding Path=DataContext.FinishEditCommand}"
                    Content="{DynamicResource button.save}"
                    DockPanel.Dock="Right"
                    IsDefault="True">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <local:UpdateBindingSourceAction View="{Binding ElementName=pv}" />
                            <!--<local:SetFocusAction FocusElement="{Binding Path=DataContext, ElementName=tb}" />-->
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <Button
                    Command="{Binding Path=DataContext.CancelEditCommand}"
                    Content="{DynamicResource button.cancel}"
                    DockPanel.Dock="Right"
                    IsCancel="True">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <local:UpdateBindingTargetAction View="{Binding ElementName=pv}" />
                            <!--<local:SetFocusAction FocusElement="{Binding ElementName=tbFilter}" />-->
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </UniformGrid>
        </Grid>
    </Border>
</UserControl>
