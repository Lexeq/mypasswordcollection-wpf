<Window
    x:Class="MPC.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:convs="clr-namespace:MPC.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=system.windows.interactivity"
    xmlns:local="clr-namespace:MPC.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:MPC.ViewModels"
    Title="MyPasswordCollection"
    Width="550"
    Height="300"
    MinWidth="300"
    MinHeight="250"
    AllowDrop="True"
    d:DataContext="{d:DesignInstance Type=vm:MainWindowViewModel}"
    mc:Ignorable="d">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisible" />
        <convs:InverseBooleanConverter x:Key="InverseBoolConv" />
        <convs:BoolToHidden x:Key="BoolToHidden"/>
        <convs:NullToBoolConverter x:Key="NullToBoolConv" />
        <convs:MultiConverter x:Key="InversedBoolToHidden">
            <convs:InverseBooleanConverter />
            <convs:BoolToHidden />
        </convs:MultiConverter>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding
            Key="O"
            Command="{Binding OpenRepositoryCommand}"
            Modifiers="Ctrl" />

        <KeyBinding
            Key="N"
            Command="{Binding CreateRepositoryCommand}"
            Modifiers="Ctrl" />
        <KeyBinding Key="Delete" Command="{Binding RemoveCommand}" />

        <KeyBinding
            Key="W"
            Command="{Binding CloseRepositoryCommand}"
            Modifiers="Ctrl" />
    </Window.InputBindings>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Click" SourceObject="{Binding ElementName=exitMenuItem}">
            <local:CloseWindowTriggerAction />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <i:Interaction.Behaviors>
        <local:DropBehavior Command="{Binding OpenPathCommand}"/>
    </i:Interaction.Behaviors>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10*" />
            <ColumnDefinition Width="16*" />
        </Grid.ColumnDefinitions>

        <Menu
            Name="mainMenu"
            Grid.ColumnSpan="2"
            Width="auto"
            Height="auto"
            Padding="2.5"
            HorizontalAlignment="Stretch"
            IsMainMenu="True">

            <Menu.Background>
                <LinearGradientBrush StartPoint="0.3,0" EndPoint="1,0">
                    <GradientStop Offset="0" Color="#FFE0E8FF" />
                    <GradientStop Offset="1" Color="#00E0E8FF" />
                </LinearGradientBrush>
            </Menu.Background>

            <MenuItem Header="{DynamicResource menu.file}">
                <MenuItem
                    Command="{Binding CreateRepositoryCommand}"
                    Header="{DynamicResource menu.new}"
                    InputGestureText="Ctrl + N" />

                <MenuItem
                    Command="{Binding OpenRepositoryCommand}"
                    Header="{DynamicResource menu.open}"
                    InputGestureText="Ctrl + O" />

                <MenuItem
                    Command="{Binding CloseRepositoryCommand}"
                    Header="{DynamicResource menu.close}"
                    InputGestureText="Ctrl + W" />
                <MenuItem x:Name="exitMenuItem" Header="{DynamicResource menu.exit}" />
            </MenuItem>

            <MenuItem Header="{DynamicResource menu.edit}">
                <MenuItem Command="{Binding PasswordGenerationCommand}" Header="{DynamicResource menu.pasgen}" />

                <MenuItem Command="{Binding ChangePasswordCommand}" Header="{DynamicResource menu.change}" />

                <MenuItem Command="{Binding ClearCommand}" Header="{DynamicResource menu.clear}" />

                <MenuItem Command="{Binding DeleteRepositoryCommand}" Header="{DynamicResource menu.deleteAll}" />
            </MenuItem>

            <MenuItem Header="{DynamicResource menu.help}">
                <MenuItem Command="{Binding ShowAboutCommand}" Header="{DynamicResource menu.about}" />
            </MenuItem>
        </Menu>

        <Grid
            Name="gridPasswordCollection"
            Grid.Row="1"
            IsEnabled="{Binding CollectionView, Converter={StaticResource NullToBoolConv}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
                <RowDefinition Height="22" />
                <RowDefinition Height="20" />
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Padding="5">
                <Grid Name="grSearch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <TextBox
                        x:Name="tbFilter"
                        Grid.Column="0"
                        Width="auto"
                        MinWidth="100"
                        Margin="2,2,5,2"
                        HorizontalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Text="{Binding Path=FilterString, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Resources>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=tbFilter}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>

                    <Button
                        Grid.Column="1"
                        Width="auto"
                        Margin="2"
                        Padding="5,2,5,2"
                        Command="{Binding ClearFilterCommand}"
                        Content="{DynamicResource button.clearFilter}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <local:SetFocusAction FocusElement="{Binding ElementName=tbFilter}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Grid>
            </Border>

            <ListBox
                Name="lbPasswords"
                Grid.Row="1"
                Margin="7"
                DisplayMemberPath="Site"
                ItemsSource="{Binding CollectionView}"
                SelectedItem="{Binding SelectedItem}" />

            <Grid Grid.Row="2" Grid.RowSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Button
                    Name="btnAdd"
                    Grid.Column="0"
                    Margin="10"
                    Padding="2"
                    Content="{DynamicResource button.add}">
                    <i:Interaction.Behaviors>
                        <local:CanExecuteToIsEnabledBehavior Command="{Binding AddCommand}" />
                    </i:Interaction.Behaviors>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding AddCommand}" />
                            <local:SetFocusAction FocusElement="{Binding ElementName=tbSite}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button
                    Name="btnRemove"
                    Grid.Column="1"
                    Margin="10"
                    Padding="2"
                    Command="{Binding RemoveCommand}"
                    Content="{DynamicResource button.delete}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <local:SetFocusAction FocusElement="{Binding ElementName=tbSite}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </Grid>
        </Grid>

        <Border
            Grid.Row="1"
            Grid.Column="1"
            Padding="5"
            IsEnabled="{Binding SelectedItem, Converter={StaticResource ResourceKey=NullToBoolConv}}">

            <Border.Resources>
                <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox">
                    <Setter Property="IsReadOnly" Value="{Binding Path=DataContext.EditMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}, TargetNullValue=true, Converter={StaticResource ResourceKey=InverseBoolConv}}" />
                </Style>

                <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="local:PasswordTextBox" />
            </Border.Resources>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="auto"
                        MinWidth="25"
                        MaxWidth="200"
                        SharedSizeGroup="LeftColumn" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition
                        Width="auto"
                        MinWidth="25"
                        MaxWidth="200"
                        SharedSizeGroup="RightColumn" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="0" Text="{DynamicResource text.site}" />
                <TextBlock Grid.Row="1" Text="{DynamicResource text.login}" />
                <TextBlock Grid.Row="2" Text="{DynamicResource text.password}" />

                <TextBox
                    x:Name="tbSite"
                    Grid.Row="0"
                    Grid.Column="1"
                    Text="{Binding Path=SelectedItem.Site, UpdateSourceTrigger=Explicit}" />
                <TextBox
                    x:Name="tbLogin"
                    Grid.Row="1"
                    Grid.Column="1"
                    Text="{Binding Path=SelectedItem.Login, UpdateSourceTrigger=Explicit}" />
                <local:PasswordTextBox
                    x:Name="ptbPassword"
                    Grid.Row="2"
                    Grid.Column="1"
                    Password="{Binding Path=SelectedItem.Password, UpdateSourceTrigger=Explicit}"
                    UsePasswordChar="{Binding ElementName=ChbShowPassword, Path=IsChecked, Converter={StaticResource InverseBoolConv}}" />

                <Button
                    Grid.Row="0"
                    Grid.Column="2"
                    Content="{DynamicResource button.copy}"
                    Visibility="{Binding EditMode, Converter={StaticResource BoolToHidden}}">
                    <i:Interaction.Behaviors>
                        <local:CopyToClipboardBehavior Text="{Binding ElementName=tbSite, Path=Text}" />
                    </i:Interaction.Behaviors>
                </Button>
                <Button
                    Grid.Row="0"
                    Grid.Column="2"
                    Content="{DynamicResource button.paste}"
                    Visibility="{Binding EditMode, Converter={StaticResource InversedBoolToHidden}}">
                    <i:Interaction.Behaviors>
                        <local:PasteFromClipboardBehavior Target="{Binding ElementName=tbSite, Mode=OneTime}" />
                    </i:Interaction.Behaviors>
                </Button>


                <Button
                    Grid.Row="1"
                    Grid.Column="2"
                    Content="{DynamicResource button.copy}"
                    Visibility="{Binding EditMode, Converter={StaticResource BoolToHidden}}">
                    <i:Interaction.Behaviors>
                        <local:CopyToClipboardBehavior Text="{Binding ElementName=tbLogin, Path=Text}" />
                    </i:Interaction.Behaviors>
                </Button>
                <Button
                    Grid.Row="1"
                    Grid.Column="2"
                    Content="{DynamicResource button.paste}"
                    Visibility="{Binding EditMode, Converter={StaticResource InversedBoolToHidden}}">
                    <i:Interaction.Behaviors>
                        <local:PasteFromClipboardBehavior Target="{Binding ElementName=tbLogin, Mode=OneTime}" />
                    </i:Interaction.Behaviors>
                </Button>


                <Button
                    Grid.Row="2"
                    Grid.Column="2"
                    Content="{DynamicResource button.copy}"
                    Visibility="{Binding EditMode, Converter={StaticResource BoolToHidden}}">
                    <i:Interaction.Behaviors>
                        <local:CopyToClipboardBehavior Text="{Binding ElementName=ptbPassword, Path=Password}" />
                    </i:Interaction.Behaviors>
                </Button>
                <Button
                    Grid.Row="2"
                    Grid.Column="2"
                    Content="{DynamicResource button.paste}"
                    Visibility="{Binding EditMode, Converter={StaticResource InversedBoolToHidden}}">
                    <i:Interaction.Behaviors>
                        <local:PasteFromClipboardBehavior Target="{Binding ElementName=ptbPassword, Mode=OneTime}" />
                    </i:Interaction.Behaviors>
                </Button>

                <CheckBox
                    x:Name="ChbShowPassword"
                    Grid.Row="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Margin="5,0"
                    Padding="5,3"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    Content="{DynamicResource checkbox.showPassword}" />

                <Button
                    Grid.Row="4"
                    Grid.Column="2"
                    Content="{DynamicResource button.edit}"
                    Visibility="{Binding Path=EditMode, Converter={StaticResource BoolToHidden}}">
                    <i:Interaction.Behaviors>
                        <local:CanExecuteToIsEnabledBehavior Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.EditCommand}" />
                    </i:Interaction.Behaviors>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding Path=EditCommand}" />
                            <local:SetFocusAction FocusElement="{Binding ElementName=tbSite}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <UniformGrid
                    Grid.Row="4"
                    Grid.ColumnSpan="2"
                    HorizontalAlignment="Right"
                    Columns="2"
                    Visibility="{Binding Path=EditMode, Converter={StaticResource BoolToVisible}}">
                    <Button
                        Command="{Binding Path=FinishEditCommand}"
                        Content="{DynamicResource button.save}"
                        DockPanel.Dock="Right"
                        IsDefault="True">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <local:UpdateBindingSourceAction View="{Binding ElementName=tbSite}" Property="{x:Static TextBox.TextProperty}" />
                                <local:UpdateBindingSourceAction View="{Binding ElementName=tbLogin}" Property="{x:Static TextBox.TextProperty}" />
                                <local:UpdateBindingSourceAction View="{Binding ElementName=ptbPassword}" Property="{x:Static local:PasswordTextBox.PasswordProperty}" />
                                <local:SetFocusAction FocusElement="{Binding ElementName=tbFilter}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button
                        Command="{Binding Path=CancelEditCommand}"
                        Content="{DynamicResource button.cancel}"
                        DockPanel.Dock="Right"
                        IsCancel="True">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <local:UpdateBindingTargetAction View="{Binding ElementName=tbSite}" Property="{x:Static TextBox.TextProperty}" />
                                <local:UpdateBindingTargetAction View="{Binding ElementName=tbLogin}" Property="{x:Static TextBox.TextProperty}" />
                                <local:UpdateBindingTargetAction View="{Binding ElementName=ptbPassword}" Property="{x:Static local:PasswordTextBox.PasswordProperty}" />
                                <local:SetFocusAction FocusElement="{Binding ElementName=tbFilter}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </UniformGrid>
            </Grid>
        </Border>
    </Grid>
</Window>
